@model SistemaCitasMedicas.Models.Usuario

@{
    ViewBag.Title = "AgregarCuentaPaciente";
}
<style>
    body {
        background: url(../../IMAGENES/bg-form.jpg) no-repeat center top;
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center;
        background-attachment: fixed;
    }
</style>



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="container bg-dark bg-gradient bg-opacity-75 rounded-3 pt-2 row g-3">
    <h2 class="text-white">Por favor ingrese su información personal</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row col-12">
        <div class="col-md-6 d-flex align-items-center justify-content-start mt-md-4">
            <label class="text-white h4">DNI:</label>
            @Html.EditorFor(model => model.dniusu, new { htmlAttributes = new { @class = "form-control mx-4", max = "99999999", maxlength = "8", placeholder = "Ingrese su dni" } })
            @Html.ValidationMessageFor(model => model.dniusu, "", new { @class = "text-center text-danger bg-dark" })
        </div>
        <div class="col-md-6 d-flex align-items-center justify-content-end mt-4">
            <label class="text-white h4">Nombre:</label>
            @Html.EditorFor(model => model.nombreusu, new { htmlAttributes = new { @class = "form-control mx-4", maxlength = "200", placeholder = "Ingrese su nombre" } })
            @Html.ValidationMessageFor(model => model.nombreusu, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row col-12 mt-4">
        <div class="col-md-6 d-flex align-items-center justify-content-start mt-md-4">
            <label class="text-white h4">Sexo:</label>
            @Html.DropDownList("idsexo", ViewBag.sexos as SelectList, null, new { @class = "form-select mx-4" })
            @Html.ValidationMessageFor(model => model.idsexo, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 d-flex align-items-center justify-content-end mt-4">
            <label class="text-white h4">Distrito:</label>
            @Html.DropDownList("iddistrito", ViewBag.distritos as SelectList, null, new { @class = "form-select mx-4" })
            @Html.ValidationMessageFor(model => model.iddistrito, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row col-12 mt-4">
        <div class="col-md-5 d-flex align-items-center justify-content-start mt-md-4">
            <label class="text-white h4">Celular:</label>
            @Html.EditorFor(model => model.celularusu, new { htmlAttributes = new { @class = "form-control mx-3", maxlength = "15", placeholder = "Ingrese su N° de celular" } })
            @Html.ValidationMessageFor(model => model.celularusu, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-7 d-flex align-items-center justify-content-end mt-4">
            <label class="text-white h4">Email:</label>
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control mx-4", maxlength = "60", placeholder = "Ingrese su correo" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row col-md-9 mt-md-4">

        <div class="col-md-6 d-flex align-items-center justify-content-start mt-4">
            <label class="text-white h4">Clave:</label>
            <div class="mx-2"></div>
            <div class="input-group">
                <input type="password" placeholder="Ingrese su clave" name="clave" class="form-control" id="clave" />
                <button class="btn btn-dark" onclick="mostrarContrasena()" type="button">
                    <i class="bi bi-eye-slash-fill" id="icono"></i>
                </button>
            </div>
        </div>
        @Html.ValidationMessageFor(model => model.clave, "", new { @class = "text-danger bg-dark" })
    </div>

    @if (Model.dniusu == 0 || Model.nombreusu.IsEmpty() || Model.celularusu.IsEmpty() || Model.email.IsEmpty() || Model.clave.IsEmpty())
    {
        <div class="alert alert-warning alert-dismissible d-flex fade show mb-0 mt-3 @ViewBag.valor" role="alert">
            <div class="bi bi-info-circle-fill mx-3"></div>
            @ViewBag.mensaje
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }else
    {
        <div class="alert alert-success alert-dismissible d-flex fade show mb-0 mt-3 @ViewBag.valor" role="alert">
            <div class="bi bi-check-circle-fill mx-3"></div>
            @ViewBag.mensaje
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class=" mt-3 mb-1">
        <div class="d-grid gap-2 col-md-4 mx-auto">
            <input type="submit" name="btncrud" value="Registrar" class="btn btn-success text-white text-uppercase fw-bold mx-4" />
        </div>
    </div>
    <div class="col-md-6 d-flex align-items-center justify-content-start mt-md-2">
        <p class="text-white fs-5">Ya tienes cuenta? @Html.ActionLink("Limpiar", "AgregarCuentaPaciente", new { id = "" }, new { @class = "link-primary fw-bolder text-decoration-none" })</p>
    </div>

    <!------------------------
    <p class="text-white fs-5">Ya tienes cuenta? <a class="link-primary fw-bolder text-decoration-none">Login</a></p>
    <div class="col-md-6 d-flex align-items-center justify-content-start mt-md-4">
            <label class="text-white h4">Contraseña:</label>
            "arroba"Html.EditorFor(model => model.clave, new { htmlAttributes = new { "arroba"class = "form-control  mx-4", maxlength = "40", placeholder = "Ingrese su contraseña" } })
            "arroba"Html.ValidationMessageFor(model => model.clave, "", new { "arroba"class = "text-danger" })
        </div>
    "arroba"Html.ActionLink("Limpiar", "AgregarCuentaPaciente", new { id = "" }, new { "arroba"class = "btn btn-secondary mx-4 invisible" })
    ------------------------>
</div>
}

<div>
    
</div>

<script>
    function mostrarContrasena() {
        var tipo = document.getElementById("clave");
        var icono = document.getElementById("icono");
        if (tipo.type == "password" && icono.className == "bi bi-eye-slash-fill") {
            tipo.type = "text";
            icono.classList = "bi bi-eye-fill";
        } else {
            tipo.type = "password";
            icono.classList = "bi bi-eye-slash-fill";
        }
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
